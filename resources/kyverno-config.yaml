apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-01-08T12:02:44Z"
    generateName: kyverno-admission-controller-5db56b9fdc-
    labels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 5db56b9fdc
    name: kyverno-admission-controller-5db56b9fdc-2rv8c
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-admission-controller-5db56b9fdc
      uid: 6acc9d2a-a9c0-48dc-becf-ac2b9456ccc4
    resourceVersion: "107844"
    uid: 70ee6bff-73e0-4f4d-803f-bdac7fe9f7e2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - admission-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
      - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
      - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
      - --reportsServiceAccountName=system:serviceaccount:kyverno:kyverno-reports-controller
      - --servicePort=443
      - --webhookServerPort=9443
      - --resyncPeriod=15m
      - --disableMetrics=false
      - --otelConfig=prometheus
      - --metricsPort=8000
      - --admissionReports=true
      - --maxAdmissionReports=1000
      - --autoUpdateWebhooks=true
      - --enableConfigMapCaching=true
      - --enableDeferredLoading=true
      - --dumpPayload=false
      - --forceFailurePolicyIgnore=false
      - --generateValidatingAdmissionPolicy=false
      - --dumpPatches=false
      - --maxAPICallResponseLength=2000000
      - --loggingFormat=text
      - --v=2
      - --omitEvents=PolicyApplied,PolicySkipped
      - --enablePolicyException=false
      - --protectManagedResources=false
      - --allowInsecureRegistry=false
      - --registryCredentialHelpers=default,google,amazon,azure,github
      - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
      env:
      - name: INIT_CONFIG
        value: kyverno
      - name: METRICS_CONFIG
        value: kyverno-metrics
      - name: KYVERNO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KYVERNO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KYVERNO_SERVICEACCOUNT_NAME
        value: kyverno-admission-controller
      - name: KYVERNO_ROLE_NAME
        value: kyverno:admission-controller
      - name: KYVERNO_SVC
        value: kyverno-svc
      - name: TUF_ROOT
        value: /.sigstore
      - name: KYVERNO_DEPLOYMENT
        value: kyverno-admission-controller
      image: ghcr.io/kyverno/kyverno:v1.13.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: kyverno
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      - containerPort: 8000
        name: metrics-port
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /health/readiness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 384Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 20
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 2
        periodSeconds: 6
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.sigstore
        name: sigstore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7z64b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - args:
      - --loggingFormat=text
      - --v=2
      env:
      - name: KYVERNO_SERVICEACCOUNT_NAME
        value: kyverno-admission-controller
      - name: KYVERNO_ROLE_NAME
        value: kyverno:admission-controller
      - name: INIT_CONFIG
        value: kyverno
      - name: METRICS_CONFIG
        value: kyverno-metrics
      - name: KYVERNO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KYVERNO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KYVERNO_DEPLOYMENT
        value: kyverno-admission-controller
      - name: KYVERNO_SVC
        value: kyverno-svc
      image: ghcr.io/kyverno/kyvernopre:v1.13.2
      imagePullPolicy: IfNotPresent
      name: kyverno-pre
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7z64b
        readOnly: true
    nodeName: cfa-argo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kyverno-admission-controller
    serviceAccountName: kyverno-admission-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: sigstore
    - name: kube-api-access-7z64b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:04Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:03:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://65ac592e5a67c11f9f7d16483ed4a791dea0e0dd5ae2d3c9309f3f7eda1ec80f
      image: ghcr.io/kyverno/kyverno:v1.13.2
      imageID: ghcr.io/kyverno/kyverno@sha256:aee05eb36f1f0059009758172bd44469c468e17c28b8ebeb3e1c6513193cd152
      lastState:
        terminated:
          containerID: containerd://58e9adcf236237c4dbd47bd2232e17ddaaf1d5d2a15aa2c7a017c60141d35c3e
          exitCode: 255
          finishedAt: "2025-01-09T05:22:56Z"
          reason: Unknown
          startedAt: "2025-01-08T12:04:19Z"
      name: kyverno
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-01-09T05:23:08Z"
      volumeMounts:
      - mountPath: /.sigstore
        name: sigstore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7z64b
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    initContainerStatuses:
    - containerID: containerd://81126510aa7f0febee15485987bdc9d9fc5b094b16b756a95c11664d11d09824
      image: ghcr.io/kyverno/kyvernopre:v1.13.2
      imageID: ghcr.io/kyverno/kyvernopre@sha256:1e968b7609f8dcb6bd1805d9f26489f6174a4f5c3036b8f05db8f3574a8177b0
      lastState: {}
      name: kyverno-pre
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://81126510aa7f0febee15485987bdc9d9fc5b094b16b756a95c11664d11d09824
          exitCode: 0
          finishedAt: "2025-01-09T05:23:07Z"
          reason: Completed
          startedAt: "2025-01-09T05:23:04Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7z64b
        readOnly: true
        recursiveReadOnly: Disabled
    phase: Running
    podIP: 10.244.0.13
    podIPs:
    - ip: 10.244.0.13
    qosClass: Burstable
    startTime: "2025-01-08T12:02:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-01-08T12:02:44Z"
    generateName: kyverno-background-controller-76cd686bf7-
    labels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 76cd686bf7
    name: kyverno-background-controller-76cd686bf7-r97sh
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-background-controller-76cd686bf7
      uid: 080a66de-dc75-4523-82a1-4d5143a5dd93
    resourceVersion: "107675"
    uid: 9394c7c9-8702-4ef2-ba40-e2777c4837da
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - background-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --disableMetrics=false
      - --otelConfig=prometheus
      - --metricsPort=8000
      - --resyncPeriod=15m
      - --enableConfigMapCaching=true
      - --enableDeferredLoading=true
      - --maxAPICallResponseLength=2000000
      - --loggingFormat=text
      - --v=2
      - --omitEvents=PolicyApplied,PolicySkipped
      - --enablePolicyException=false
      - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
      env:
      - name: KYVERNO_SERVICEACCOUNT_NAME
        value: kyverno-background-controller
      - name: KYVERNO_DEPLOYMENT
        value: kyverno-background-controller
      - name: INIT_CONFIG
        value: kyverno
      - name: METRICS_CONFIG
        value: kyverno-metrics
      - name: KYVERNO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KYVERNO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: ghcr.io/kyverno/background-controller:v1.13.2
      imagePullPolicy: IfNotPresent
      name: controller
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      - containerPort: 8000
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9vv6g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cfa-argo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kyverno-background-controller
    serviceAccountName: kyverno-background-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-9vv6g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ad2fd0d217f62625e4091e50847778ec6f364a24e5d57ed4f9cab084787bf024
      image: ghcr.io/kyverno/background-controller:v1.13.2
      imageID: ghcr.io/kyverno/background-controller@sha256:01b5088cdfd9c2177b57428eb79321839276425950e197178bc77d9ecc3fa664
      lastState:
        terminated:
          containerID: containerd://90e2a9d20134e0a36709e24e38410dac3964e8aa8f39a3641f0e44fb6733c7bd
          exitCode: 255
          finishedAt: "2025-01-09T05:22:56Z"
          reason: Unknown
          startedAt: "2025-01-08T12:04:04Z"
      name: controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-01-09T05:23:03Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9vv6g
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.6
    podIPs:
    - ip: 10.244.0.6
    qosClass: Burstable
    startTime: "2025-01-08T12:02:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-01-08T12:02:44Z"
    generateName: kyverno-cleanup-controller-6c99cd9d4-
    labels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 6c99cd9d4
    name: kyverno-cleanup-controller-6c99cd9d4-sbbqf
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-cleanup-controller-6c99cd9d4
      uid: 76ee4ec9-69f2-4496-92f3-637aace2de98
    resourceVersion: "107992"
    uid: 34d5eb90-d0cc-4e4c-a28c-d66a7f6a834d
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - cleanup-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
      - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
      - --servicePort=443
      - --cleanupServerPort=9443
      - --webhookServerPort=9443
      - --resyncPeriod=15m
      - --disableMetrics=false
      - --otelConfig=prometheus
      - --metricsPort=8000
      - --enableDeferredLoading=true
      - --dumpPayload=false
      - --maxAPICallResponseLength=2000000
      - --loggingFormat=text
      - --v=2
      - --protectManagedResources=false
      - --ttlReconciliationInterval=1m
      env:
      - name: KYVERNO_DEPLOYMENT
        value: kyverno-cleanup-controller
      - name: INIT_CONFIG
        value: kyverno
      - name: METRICS_CONFIG
        value: kyverno-metrics
      - name: KYVERNO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KYVERNO_SERVICEACCOUNT_NAME
        value: kyverno-cleanup-controller
      - name: KYVERNO_ROLE_NAME
        value: kyverno:cleanup-controller
      - name: KYVERNO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: KYVERNO_SVC
        value: kyverno-cleanup-controller
      image: ghcr.io/kyverno/cleanup-controller:v1.13.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: controller
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      - containerPort: 8000
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /health/readiness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 20
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 2
        periodSeconds: 6
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlgzl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cfa-argo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kyverno-cleanup-controller
    serviceAccountName: kyverno-cleanup-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-dlgzl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b2871c826580890b4bf701df2738cdc34848a81b206cd51cf97d2922e9962797
      image: ghcr.io/kyverno/cleanup-controller:v1.13.2
      imageID: ghcr.io/kyverno/cleanup-controller@sha256:453edd17b4ac7d6387fca796a271428c4ac15f868d5fb1b38a5ff6e3461b22d4
      lastState:
        terminated:
          containerID: containerd://b6b06aa018fd72e78055109678571d7fb1f991b3cfca30cf1acad9b6ea4d0a91
          exitCode: 255
          finishedAt: "2025-01-09T05:22:56Z"
          reason: Unknown
          startedAt: "2025-01-08T12:02:59Z"
      name: controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-01-09T05:23:03Z"
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dlgzl
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.5
    podIPs:
    - ip: 10.244.0.5
    qosClass: Burstable
    startTime: "2025-01-08T12:02:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-01-08T12:02:44Z"
    generateName: kyverno-reports-controller-76d69d697d-
    labels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 76d69d697d
    name: kyverno-reports-controller-76d69d697d-b9c52
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-reports-controller-76d69d697d
      uid: b29f99b5-a17a-4351-b6e5-cbe294281621
    resourceVersion: "107672"
    uid: 5fbdf988-ee36-453d-9cfe-c3976792964a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - reports-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --disableMetrics=false
      - --otelConfig=prometheus
      - --metricsPort=8000
      - --resyncPeriod=15m
      - --admissionReports=true
      - --aggregateReports=true
      - --policyReports=true
      - --validatingAdmissionPolicyReports=false
      - --backgroundScan=true
      - --backgroundScanWorkers=2
      - --backgroundScanInterval=1h
      - --skipResourceFilters=true
      - --enableConfigMapCaching=true
      - --enableDeferredLoading=true
      - --maxAPICallResponseLength=2000000
      - --loggingFormat=text
      - --v=2
      - --omitEvents=PolicyApplied,PolicySkipped
      - --enablePolicyException=false
      - --allowInsecureRegistry=false
      - --registryCredentialHelpers=default,google,amazon,azure,github
      - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
      env:
      - name: KYVERNO_SERVICEACCOUNT_NAME
        value: kyverno-reports-controller
      - name: KYVERNO_DEPLOYMENT
        value: kyverno-reports-controller
      - name: INIT_CONFIG
        value: kyverno
      - name: METRICS_CONFIG
        value: kyverno-metrics
      - name: KYVERNO_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: KYVERNO_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: TUF_ROOT
        value: /.sigstore
      image: ghcr.io/kyverno/reports-controller:v1.13.2
      imagePullPolicy: IfNotPresent
      name: controller
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      - containerPort: 8000
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /.sigstore
        name: sigstore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqx9c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: cfa-argo-control-plane
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kyverno-reports-controller
    serviceAccountName: kyverno-reports-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: sigstore
    - name: kube-api-access-jqx9c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T05:23:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-08T12:02:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://97f6b78c6c7901789d6a02c72aff3316791c7ea2aa8b53c9fe74529381970993
      image: ghcr.io/kyverno/reports-controller:v1.13.2
      imageID: ghcr.io/kyverno/reports-controller@sha256:a31f9e28aa1f45d8d8d076f5728acbfe88e670a21d8ac8166d12759a45466a6a
      lastState:
        terminated:
          containerID: containerd://5feada63bdf07ec6b0436e04f8f61ef7eda1a907c0d59fed96163a9c148fc284
          exitCode: 255
          finishedAt: "2025-01-09T05:22:56Z"
          reason: Unknown
          startedAt: "2025-01-08T12:03:17Z"
      name: controller
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-01-09T05:23:03Z"
      volumeMounts:
      - mountPath: /.sigstore
        name: sigstore
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jqx9c
        readOnly: true
        recursiveReadOnly: Disabled
    hostIP: 172.18.0.2
    hostIPs:
    - ip: 172.18.0.2
    phase: Running
    podIP: 10.244.0.7
    podIPs:
    - ip: 10.244.0.7
    qosClass: Burstable
    startTime: "2025-01-08T12:02:44Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-background-controller-metrics
    namespace: kyverno
    resourceVersion: "805"
    uid: 6cdfcedb-e3f8-4f9e-be29-44a71fc2fa62
  spec:
    clusterIP: 10.96.232.5
    clusterIPs:
    - 10.96.232.5
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-cleanup-controller
    namespace: kyverno
    resourceVersion: "818"
    uid: fa62ad91-8eba-49fa-8964-2daacb374adc
  spec:
    clusterIP: 10.96.89.250
    clusterIPs:
    - 10.96.89.250
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-cleanup-controller-metrics
    namespace: kyverno
    resourceVersion: "822"
    uid: bd7bf82a-30e6-449d-9e9d-b92237105bdd
  spec:
    clusterIP: 10.96.245.121
    clusterIPs:
    - 10.96.245.121
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-reports-controller-metrics
    namespace: kyverno
    resourceVersion: "810"
    uid: 4166acef-6f28-40e9-a79a-6be5d5c86eba
  spec:
    clusterIP: 10.96.211.79
    clusterIPs:
    - 10.96.211.79
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-svc
    namespace: kyverno
    resourceVersion: "814"
    uid: 43c029cc-5e07-41cc-be9d-94a28067599f
  spec:
    clusterIP: 10.96.52.5
    clusterIPs:
    - 10.96.52.5
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    labels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-svc-metrics
    namespace: kyverno
    resourceVersion: "801"
    uid: cb51cb5a-6554-48a6-a8b3-203791ee24f2
  spec:
    clusterIP: 10.96.159.42
    clusterIPs:
    - 10.96.159.42
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-admission-controller
    namespace: kyverno
    resourceVersion: "1176"
    uid: 713b557b-3dc8-4eeb-a9b4-d70b2253b95c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: admission-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - admission-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
          - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
          - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
          - --reportsServiceAccountName=system:serviceaccount:kyverno:kyverno-reports-controller
          - --servicePort=443
          - --webhookServerPort=9443
          - --resyncPeriod=15m
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --admissionReports=true
          - --maxAdmissionReports=1000
          - --autoUpdateWebhooks=true
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --dumpPayload=false
          - --forceFailurePolicyIgnore=false
          - --generateValidatingAdmissionPolicy=false
          - --dumpPatches=false
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --protectManagedResources=false
          - --allowInsecureRegistry=false
          - --registryCredentialHelpers=default,google,amazon,azure,github
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-admission-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:admission-controller
          - name: KYVERNO_SVC
            value: kyverno-svc
          - name: TUF_ROOT
            value: /.sigstore
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-admission-controller
          image: ghcr.io/kyverno/kyverno:v1.13.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: kyverno
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.sigstore
            name: sigstore
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - --loggingFormat=text
          - --v=2
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-admission-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:admission-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-admission-controller
          - name: KYVERNO_SVC
            value: kyverno-svc
          image: ghcr.io/kyverno/kyvernopre:v1.13.2
          imagePullPolicy: IfNotPresent
          name: kyverno-pre
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-admission-controller
        serviceAccountName: kyverno-admission-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sigstore
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-08T12:04:25Z"
      lastUpdateTime: "2025-01-08T12:04:25Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-01-08T12:02:44Z"
      lastUpdateTime: "2025-01-08T12:04:25Z"
      message: ReplicaSet "kyverno-admission-controller-5db56b9fdc" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-background-controller
    namespace: kyverno
    resourceVersion: "1093"
    uid: a201cf8a-b74a-4c15-82bd-e98afcb0fd1b
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: background-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: background-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - background-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --resyncPeriod=15m
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-background-controller
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-background-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ghcr.io/kyverno/background-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-background-controller
        serviceAccountName: kyverno-background-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-08T12:04:04Z"
      lastUpdateTime: "2025-01-08T12:04:04Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-01-08T12:02:44Z"
      lastUpdateTime: "2025-01-08T12:04:04Z"
      message: ReplicaSet "kyverno-background-controller-76cd686bf7" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-cleanup-controller
    namespace: kyverno
    resourceVersion: "107999"
    uid: 785a41dc-a8ef-4ea5-a0b4-dcd1ce90e1bd
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: cleanup-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: cleanup-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - cleanup-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
          - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
          - --servicePort=443
          - --cleanupServerPort=9443
          - --webhookServerPort=9443
          - --resyncPeriod=15m
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --enableDeferredLoading=true
          - --dumpPayload=false
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --protectManagedResources=false
          - --ttlReconciliationInterval=1m
          env:
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-cleanup-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-cleanup-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:cleanup-controller
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_SVC
            value: kyverno-cleanup-controller
          image: ghcr.io/kyverno/cleanup-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-cleanup-controller
        serviceAccountName: kyverno-cleanup-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-08T12:02:44Z"
      lastUpdateTime: "2025-01-08T12:03:05Z"
      message: ReplicaSet "kyverno-cleanup-controller-6c99cd9d4" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-01-09T05:23:41Z"
      lastUpdateTime: "2025-01-09T05:23:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
    name: kyverno-reports-controller
    namespace: kyverno
    resourceVersion: "966"
    uid: bbc3a1f8-6079-49b5-ba0b-a9ee26e067db
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: reports-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 40%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: reports-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - reports-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --resyncPeriod=15m
          - --admissionReports=true
          - --aggregateReports=true
          - --policyReports=true
          - --validatingAdmissionPolicyReports=false
          - --backgroundScan=true
          - --backgroundScanWorkers=2
          - --backgroundScanInterval=1h
          - --skipResourceFilters=true
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --allowInsecureRegistry=false
          - --registryCredentialHelpers=default,google,amazon,azure,github
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-reports-controller
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-reports-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /.sigstore
          image: ghcr.io/kyverno/reports-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.sigstore
            name: sigstore
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-reports-controller
        serviceAccountName: kyverno-reports-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sigstore
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-01-08T12:03:18Z"
      lastUpdateTime: "2025-01-08T12:03:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-01-08T12:02:44Z"
      lastUpdateTime: "2025-01-08T12:03:18Z"
      message: ReplicaSet "kyverno-reports-controller-76d69d697d" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 5db56b9fdc
    name: kyverno-admission-controller-5db56b9fdc
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-admission-controller
      uid: 713b557b-3dc8-4eeb-a9b4-d70b2253b95c
    resourceVersion: "1175"
    uid: 6acc9d2a-a9c0-48dc-becf-ac2b9456ccc4
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        pod-template-hash: 5db56b9fdc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: admission-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
          pod-template-hash: 5db56b9fdc
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - admission-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
          - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
          - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
          - --reportsServiceAccountName=system:serviceaccount:kyverno:kyverno-reports-controller
          - --servicePort=443
          - --webhookServerPort=9443
          - --resyncPeriod=15m
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --admissionReports=true
          - --maxAdmissionReports=1000
          - --autoUpdateWebhooks=true
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --dumpPayload=false
          - --forceFailurePolicyIgnore=false
          - --generateValidatingAdmissionPolicy=false
          - --dumpPatches=false
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --protectManagedResources=false
          - --allowInsecureRegistry=false
          - --registryCredentialHelpers=default,google,amazon,azure,github
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-admission-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:admission-controller
          - name: KYVERNO_SVC
            value: kyverno-svc
          - name: TUF_ROOT
            value: /.sigstore
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-admission-controller
          image: ghcr.io/kyverno/kyverno:v1.13.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: kyverno
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics-port
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.sigstore
            name: sigstore
        dnsPolicy: ClusterFirst
        initContainers:
        - args:
          - --loggingFormat=text
          - --v=2
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-admission-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:admission-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-admission-controller
          - name: KYVERNO_SVC
            value: kyverno-svc
          image: ghcr.io/kyverno/kyvernopre:v1.13.2
          imagePullPolicy: IfNotPresent
          name: kyverno-pre
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-admission-controller
        serviceAccountName: kyverno-admission-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sigstore
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 76cd686bf7
    name: kyverno-background-controller-76cd686bf7
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-background-controller
      uid: a201cf8a-b74a-4c15-82bd-e98afcb0fd1b
    resourceVersion: "1092"
    uid: 080a66de-dc75-4523-82a1-4d5143a5dd93
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: background-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        pod-template-hash: 76cd686bf7
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: background-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
          pod-template-hash: 76cd686bf7
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - background-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --resyncPeriod=15m
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-background-controller
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-background-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: ghcr.io/kyverno/background-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-background-controller
        serviceAccountName: kyverno-background-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 6c99cd9d4
    name: kyverno-cleanup-controller-6c99cd9d4
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-cleanup-controller
      uid: 785a41dc-a8ef-4ea5-a0b4-dcd1ce90e1bd
    resourceVersion: "107997"
    uid: 76ee4ec9-69f2-4496-92f3-637aace2de98
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: cleanup-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        pod-template-hash: 6c99cd9d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: cleanup-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
          pod-template-hash: 6c99cd9d4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - cleanup-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
          - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
          - --servicePort=443
          - --cleanupServerPort=9443
          - --webhookServerPort=9443
          - --resyncPeriod=15m
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --enableDeferredLoading=true
          - --dumpPayload=false
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --protectManagedResources=false
          - --ttlReconciliationInterval=1m
          env:
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-cleanup-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-cleanup-controller
          - name: KYVERNO_ROLE_NAME
            value: kyverno:cleanup-controller
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: KYVERNO_SVC
            value: kyverno-cleanup-controller
          image: ghcr.io/kyverno/cleanup-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-cleanup-controller
        serviceAccountName: kyverno-cleanup-controller
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: kyverno
      meta.helm.sh/release-namespace: kyverno
    creationTimestamp: "2025-01-08T12:02:44Z"
    generation: 1
    labels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kyverno
      app.kubernetes.io/version: 3.3.4
      helm.sh/chart: kyverno-3.3.4
      pod-template-hash: 76d69d697d
    name: kyverno-reports-controller-76d69d697d
    namespace: kyverno
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-reports-controller
      uid: bbc3a1f8-6079-49b5-ba0b-a9ee26e067db
    resourceVersion: "965"
    uid: b29f99b5-a17a-4351-b6e5-cbe294281621
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: reports-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        pod-template-hash: 76d69d697d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: reports-controller
          app.kubernetes.io/instance: kyverno
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/part-of: kyverno
          app.kubernetes.io/version: 3.3.4
          helm.sh/chart: kyverno-3.3.4
          pod-template-hash: 76d69d697d
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                    - reports-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - args:
          - --disableMetrics=false
          - --otelConfig=prometheus
          - --metricsPort=8000
          - --resyncPeriod=15m
          - --admissionReports=true
          - --aggregateReports=true
          - --policyReports=true
          - --validatingAdmissionPolicyReports=false
          - --backgroundScan=true
          - --backgroundScanWorkers=2
          - --backgroundScanInterval=1h
          - --skipResourceFilters=true
          - --enableConfigMapCaching=true
          - --enableDeferredLoading=true
          - --maxAPICallResponseLength=2000000
          - --loggingFormat=text
          - --v=2
          - --omitEvents=PolicyApplied,PolicySkipped
          - --enablePolicyException=false
          - --allowInsecureRegistry=false
          - --registryCredentialHelpers=default,google,amazon,azure,github
          - --enableReporting=validate,mutate,mutateExisting,imageVerify,generate
          env:
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: kyverno-reports-controller
          - name: KYVERNO_DEPLOYMENT
            value: kyverno-reports-controller
          - name: INIT_CONFIG
            value: kyverno
          - name: METRICS_CONFIG
            value: kyverno-metrics
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: TUF_ROOT
            value: /.sigstore
          image: ghcr.io/kyverno/reports-controller:v1.13.2
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /.sigstore
            name: sigstore
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kyverno-reports-controller
        serviceAccountName: kyverno-reports-controller
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: sigstore
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
